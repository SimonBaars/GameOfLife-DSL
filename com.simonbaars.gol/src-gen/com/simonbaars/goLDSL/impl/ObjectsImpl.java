/**
 * generated by Xtext 2.19.0
 */
package com.simonbaars.goLDSL.impl;

import com.simonbaars.goLDSL.CellDef;
import com.simonbaars.goLDSL.CellsDef;
import com.simonbaars.goLDSL.GoLDSLPackage;
import com.simonbaars.goLDSL.Grid;
import com.simonbaars.goLDSL.Objects;
import com.simonbaars.goLDSL.ShapeRef;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Objects</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.simonbaars.goLDSL.impl.ObjectsImpl#getShapes <em>Shapes</em>}</li>
 *   <li>{@link com.simonbaars.goLDSL.impl.ObjectsImpl#getMoreCell <em>More Cell</em>}</li>
 *   <li>{@link com.simonbaars.goLDSL.impl.ObjectsImpl#getMoreCells <em>More Cells</em>}</li>
 *   <li>{@link com.simonbaars.goLDSL.impl.ObjectsImpl#getGrids <em>Grids</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObjectsImpl extends MinimalEObjectImpl.Container implements Objects
{
  /**
   * The cached value of the '{@link #getShapes() <em>Shapes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShapes()
   * @generated
   * @ordered
   */
  protected EList<ShapeRef> shapes;

  /**
   * The cached value of the '{@link #getMoreCell() <em>More Cell</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoreCell()
   * @generated
   * @ordered
   */
  protected EList<CellDef> moreCell;

  /**
   * The cached value of the '{@link #getMoreCells() <em>More Cells</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoreCells()
   * @generated
   * @ordered
   */
  protected EList<CellsDef> moreCells;

  /**
   * The cached value of the '{@link #getGrids() <em>Grids</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGrids()
   * @generated
   * @ordered
   */
  protected EList<Grid> grids;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObjectsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoLDSLPackage.Literals.OBJECTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ShapeRef> getShapes()
  {
    if (shapes == null)
    {
      shapes = new EObjectContainmentEList<ShapeRef>(ShapeRef.class, this, GoLDSLPackage.OBJECTS__SHAPES);
    }
    return shapes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CellDef> getMoreCell()
  {
    if (moreCell == null)
    {
      moreCell = new EObjectContainmentEList<CellDef>(CellDef.class, this, GoLDSLPackage.OBJECTS__MORE_CELL);
    }
    return moreCell;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CellsDef> getMoreCells()
  {
    if (moreCells == null)
    {
      moreCells = new EObjectContainmentEList<CellsDef>(CellsDef.class, this, GoLDSLPackage.OBJECTS__MORE_CELLS);
    }
    return moreCells;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Grid> getGrids()
  {
    if (grids == null)
    {
      grids = new EObjectContainmentEList<Grid>(Grid.class, this, GoLDSLPackage.OBJECTS__GRIDS);
    }
    return grids;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoLDSLPackage.OBJECTS__SHAPES:
        return ((InternalEList<?>)getShapes()).basicRemove(otherEnd, msgs);
      case GoLDSLPackage.OBJECTS__MORE_CELL:
        return ((InternalEList<?>)getMoreCell()).basicRemove(otherEnd, msgs);
      case GoLDSLPackage.OBJECTS__MORE_CELLS:
        return ((InternalEList<?>)getMoreCells()).basicRemove(otherEnd, msgs);
      case GoLDSLPackage.OBJECTS__GRIDS:
        return ((InternalEList<?>)getGrids()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoLDSLPackage.OBJECTS__SHAPES:
        return getShapes();
      case GoLDSLPackage.OBJECTS__MORE_CELL:
        return getMoreCell();
      case GoLDSLPackage.OBJECTS__MORE_CELLS:
        return getMoreCells();
      case GoLDSLPackage.OBJECTS__GRIDS:
        return getGrids();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoLDSLPackage.OBJECTS__SHAPES:
        getShapes().clear();
        getShapes().addAll((Collection<? extends ShapeRef>)newValue);
        return;
      case GoLDSLPackage.OBJECTS__MORE_CELL:
        getMoreCell().clear();
        getMoreCell().addAll((Collection<? extends CellDef>)newValue);
        return;
      case GoLDSLPackage.OBJECTS__MORE_CELLS:
        getMoreCells().clear();
        getMoreCells().addAll((Collection<? extends CellsDef>)newValue);
        return;
      case GoLDSLPackage.OBJECTS__GRIDS:
        getGrids().clear();
        getGrids().addAll((Collection<? extends Grid>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoLDSLPackage.OBJECTS__SHAPES:
        getShapes().clear();
        return;
      case GoLDSLPackage.OBJECTS__MORE_CELL:
        getMoreCell().clear();
        return;
      case GoLDSLPackage.OBJECTS__MORE_CELLS:
        getMoreCells().clear();
        return;
      case GoLDSLPackage.OBJECTS__GRIDS:
        getGrids().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoLDSLPackage.OBJECTS__SHAPES:
        return shapes != null && !shapes.isEmpty();
      case GoLDSLPackage.OBJECTS__MORE_CELL:
        return moreCell != null && !moreCell.isEmpty();
      case GoLDSLPackage.OBJECTS__MORE_CELLS:
        return moreCells != null && !moreCells.isEmpty();
      case GoLDSLPackage.OBJECTS__GRIDS:
        return grids != null && !grids.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ObjectsImpl
